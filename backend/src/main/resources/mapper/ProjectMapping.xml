<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.springbootrobot.dao.ProjectDao">

    <select id="getAllProject" resultType="org.example.springbootrobot.bean.Project">
        SELECT * FROM projects
        <if test="title != null">
            where title like #{title}
        </if>
        LIMIT #{pageStart},#{pageSize}
    </select>

    <select id="getProjectCounts" resultType="java.lang.Integer">
        SELECT count(*) FROM projects
        <if test="title !=null ">
            WHERE title like #{title}
        </if>
    </select>

    <select id="getProjectCountsByUserId" resultType="java.lang.Integer">
        SELECT count(*) FROM projects
        <where>
            user_id = #{userId}
            <if test="title != null">
                AND title LIKE #{title}
            </if>
        </where>
    </select>

    <select id="getProjectsByUserId" resultType="org.example.springbootrobot.bean.Project">
        SELECT
        p.project_id as project_id,
        p.user_id as user_id,
        p.title,
        p.description,
        p.c_code as c_code,
        p.visibility,
        DATE_FORMAT(p.created_at, '%Y-%m-%d %H:%i:%s') as created_at,
        p.view_count,
        p.like_count,
        u.name as userName
        FROM projects p
        LEFT JOIN users u ON p.user_id = u.id
        WHERE p.user_id = #{userId}
        <if test="title != null">
            and p.title like #{title}
        </if>
        ORDER BY p.created_at DESC
        LIMIT #{pageStart},#{pageSize}
    </select>

    <insert id="insertProject">
        INSERT INTO projects
            (user_id, title, description, c_code, visibility)
        VALUES (#{user_id}, #{title}, #{description}, #{c_code}, #{visibility})
    </insert>

    <select id="getAllProjectWithCreator" resultType="org.example.springbootrobot.bean.Project">
        SELECT
        p.project_id as project_id,
        p.user_id as user_id,
        p.title,
        p.description,
        p.c_code as c_code,
        p.visibility,
        DATE_FORMAT(p.created_at, '%Y-%m-%d %H:%i:%s') as created_at,
        p.view_count,
        p.like_count,
        u.name as userName
        FROM projects p
        LEFT JOIN users u ON p.user_id = u.id
        <if test="title != null">
            WHERE p.title like #{title}
        </if>
        ORDER BY p.created_at DESC
        LIMIT #{pageStart},#{pageSize}
    </select>

    <select id="getProjectById" resultType="org.example.springbootrobot.bean.Project">
        SELECT *
        FROM projects WHERE project_id = #{project_id}
    </select>

    <delete id="deleteProject">
        DELETE FROM projects where project_id = #{project_id}
    </delete>

    <update id="updateProject">
        UPDATE projects SET title = #{title}, description = #{description}, c_code = #{c_code}, visibility = #{visibility}
        WHERE project_id = #{project_id}
    </update>

    <update id="updateVisibilityById">
        UPDATE projects
        SET visibility = #{visibility}
        WHERE project_id = #{project_id}
    </update>

    <!-- 获取 visibility 为 0 的项目列表 -->
    <select id="getAllVisibleProjects" resultType="org.example.springbootrobot.bean.Project">
        SELECT
        p.project_id as project_id,
        p.user_id as user_id,
        p.title,
        p.description,
        p.c_code as c_code,
        p.visibility,
        DATE_FORMAT(p.created_at, '%Y-%m-%d %H:%i:%s') as created_at,
        p.view_count,
        p.like_count,
        u.name as userName
        FROM projects p
        LEFT JOIN users u ON p.user_id = u.id
        WHERE p.visibility = 0
        <if test="title != null">
            AND p.title like #{title}
        </if>
        ORDER BY p.created_at DESC
        LIMIT #{pageStart},#{pageSize}
    </select>

    <!-- 获取项目的点赞数 -->
    <select id="getProjectLikeCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM likes WHERE project_id = #{project_id}
    </select>

    <!-- 获取项目的收藏数 -->
    <select id="getProjectFavoriteCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM favorites WHERE project_id = #{project_id}
    </select>

</mapper>