name: SpringBoot+VUE CI/CD
on:
  push:
    branches: ["develop-wangyuting"]
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    services:
      # 新增：临时启动 Redis 容器（仅测试阶段使用）
      redis:
        image: redis/redis-stack-server:latest
        ports:
          - "6379:6379"  # 映射端口到 localhost:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    # 构建并推送后端镜像
      - name: Build Backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/springboot-backend:${{ github.sha }}
   # 构建并推送前端镜像
      - name: Build Frontend image
        uses: docker/build-push-action@v4
        with:
         context: .
         file: Dockerfile.frontend
         push: true
         tags: ${{ secrets.DOCKERHUB_USERNAME }}/vue-frontend:${{ github.sha }}
# 新增：构建并推送微信小程序镜像
      - name: Build Miniprogram image
        uses: docker/build-push-action@v4
        with:
          context: .                  # 构建上下文为项目根目录
          file: Dockerfile.miniprogram # 指向无 npm 的 Dockerfile
          push: true                  # 推送至 Docker Hub
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/miniprogram-frontend:${{ github.sha }}
  # 部署到服务器
      - name: SSH Deploy
        uses: appleboy/ssh-action@v0.1.17
        with:
          host: us.uwis.cn
          username: 2025ug01
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /home/2025ug01/springboot-vue-project
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/springboot-backend:${{ github.sha }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/vue-frontend:${{ github.sha }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/miniprogram-frontend:${{ github.sha }}
            echo "MYSQL_USERNAME=${{secret.MYSQL_USERNAME}}" > .env
	    echo "MYSQL_PASSWORD=${{secret.MYSQL_PASSWORD}}" > .env
	    echo "WECHAT_APPID=${{secret.WECHAT_APPID}}" > .env
	    echo "WECHAT_SECRET=${{secret.WECHAT_SECRET}}" > .env
	    echo "JWT_SECRET=${{secret.JWT_SECRET}}" > .env
	    echo "ALITUN_ACCESS_KEY_ID=${{secret.ALITUN_ACCESS_KEY_ID}}" > .env
	    echo "ALITUN_ACCESS_KEY_SECRET=${{secret.ALITUN_ACCESS_KEY_SECRET}}" > .env
	    echo "XUNFEI_APPID=${{secret.XUNFEI_APPID}}" > .env
	    echo "XUNFEI_API_KEY=${{secret.XUNFEI_API_KEY}}" > .env
	    echo "XUNFEI_API_SECRET=${{secret.XUNFEI_API_SECRET}}" >> .env

            docker-compose down
            docker-compose up -d --build
